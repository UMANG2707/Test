name: Common CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'v*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api-dotnet: ${{ steps.filter.outputs.api-dotnet }}
      log-manager: ${{ steps.filter.outputs.log-manager }}
      mobile-app: ${{ steps.filter.outputs.mobile-app }}
      web-app: ${{ steps.filter.outputs.web-app }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Detect Changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            api-dotnet:
              - 'API-dotnet/**'
            log-manager:
              - 'Log-Manager/**'
            mobile-app:
              - 'Mobile-Application/**'
            web-app:
              - 'Web-App-Angular/**'

  build-dotnet:
    needs: detect-changes
    if: needs.detect-changes.outputs.api-dotnet == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore Dependencies
        run: |
          cd API-dotnet
          dotnet restore

      - name: Build .NET App
        run: |
          cd API-dotnet
          dotnet build --configuration Release

      - name: Run Tests
        run: |
          cd API-dotnet
          dotnet test --no-build --verbosity normal

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        run: |
          cd API-dotnet
          docker build -t uamng/api-dotnet:${{ github.sha }} .
          docker push uamng/api-dotnet:${{ github.sha }}

  build-log-manager:
    needs: detect-changes
    if: needs.detect-changes.outputs.log-manager == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        run: |
          cd Log-Manager
          docker build -t uamng/log-manager:${{ github.sha }} .
          docker push uamng/log-manager:${{ github.sha }}

  build-mobile-app:
    needs: detect-changes
    if: needs.detect-changes.outputs.mobile-app == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          cd Mobile-Application
          npm install

      - name: Build Mobile App
        run: |
          cd Mobile-Application
          npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        run: |
          cd Mobile-Application
          docker build -t uamng/mobile-app:${{ github.sha }} .
          docker push uamng/mobile-app:${{ github.sha }}

  build-angular:
    needs: detect-changes
    if: needs.detect-changes.outputs.web-app == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Fix npm vulnerabilities
        run: npm audit fix --force
  
      - name: Install Dependencies
        run: |
          cd Web-App-Angular
          npm install

      - name: Build Angular App
        run: |
          cd Web-App-Angular
          npx ng build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Image
        run: |
          cd Web-App-Angular
          docker build -t uamng/web-app-angular:${{ github.sha }} .
          docker push uamng/web-app-angular:${{ github.sha }}
